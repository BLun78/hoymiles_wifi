// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: protos/APPInfomationData.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APPDtuInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind              int32  `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`                                             // Type of the device
	DtuSwVersion            int32  `protobuf:"varint,2,opt,name=dtu_sw_version,json=dtuSwVersion,proto3" json:"dtu_sw_version,omitempty"`                                     // DTU software version
	DtuHwVersion            int32  `protobuf:"varint,3,opt,name=dtu_hw_version,json=dtuHwVersion,proto3" json:"dtu_hw_version,omitempty"`                                     // DTU hardware version
	DtuStepTime             int32  `protobuf:"varint,4,opt,name=dtu_step_time,json=dtuStepTime,proto3" json:"dtu_step_time,omitempty"`                                        // DTU step time
	DtuRfHwVersion          int32  `protobuf:"varint,5,opt,name=dtu_rf_hw_version,json=dtuRfHwVersion,proto3" json:"dtu_rf_hw_version,omitempty"`                             // DTU RF hardware version
	DtuRfSwVersion          int32  `protobuf:"varint,6,opt,name=dtu_rf_sw_version,json=dtuRfSwVersion,proto3" json:"dtu_rf_sw_version,omitempty"`                             // DTU RF software version
	AccessModel             int32  `protobuf:"varint,7,opt,name=access_model,json=accessModel,proto3" json:"access_model,omitempty"`                                          // Access model
	CommunicationTime       int32  `protobuf:"varint,8,opt,name=communication_time,json=communicationTime,proto3" json:"communication_time,omitempty"`                        // Communication time
	SignalStrength          int32  `protobuf:"varint,9,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`                                 // Signal strength
	GprsVersion             string `protobuf:"bytes,10,opt,name=gprs_version,json=gprsVersion,proto3" json:"gprs_version,omitempty"`                                          // GPRS version
	WifiVersion             string `protobuf:"bytes,11,opt,name=wifi_version,json=wifiVersion,proto3" json:"wifi_version,omitempty"`                                          // Wifi version
	KaNumber                string `protobuf:"bytes,12,opt,name=ka_number,json=kaNumber,proto3" json:"ka_number,omitempty"`                                                   // KA number
	DtuRuleId               int32  `protobuf:"varint,13,opt,name=dtu_rule_id,json=dtuRuleId,proto3" json:"dtu_rule_id,omitempty"`                                             // DTU rule ID
	DtuErrorCode            int32  `protobuf:"varint,14,opt,name=dtu_error_code,json=dtuErrorCode,proto3" json:"dtu_error_code,omitempty"`                                    // DTU error code
	Dtu485Mode              int32  `protobuf:"varint,15,opt,name=dtu485_mode,json=dtu485Mode,proto3" json:"dtu485_mode,omitempty"`                                            // DTU485 mode
	Dtu485Address           int32  `protobuf:"varint,16,opt,name=dtu485_address,json=dtu485Address,proto3" json:"dtu485_address,omitempty"`                                   // DTU485 address
	Sub1GFrequencyBand      int32  `protobuf:"varint,17,opt,name=sub1g_frequency_band,json=sub1gFrequencyBand,proto3" json:"sub1g_frequency_band,omitempty"`                  // Sub1G frequency band
	Sub1GChannelTotalNumber int32  `protobuf:"varint,18,opt,name=sub1g_channel_total_number,json=sub1gChannelTotalNumber,proto3" json:"sub1g_channel_total_number,omitempty"` // Sub1G channel total number
	Sub1GChannelNumber      int32  `protobuf:"varint,19,opt,name=sub1g_channel_number,json=sub1gChannelNumber,proto3" json:"sub1g_channel_number,omitempty"`                  // Sub1G channel number
	Sub1GRp                 int32  `protobuf:"varint,20,opt,name=sub1g_rp,json=sub1gRp,proto3" json:"sub1g_rp,omitempty"`                                                     // Sub1G RP
	Sub1GChannelTotal       int32  `protobuf:"varint,21,opt,name=sub1g_channel_total,json=sub1gChannelTotal,proto3" json:"sub1g_channel_total,omitempty"`                     // Sub1G channel total
	GprsImei                string `protobuf:"bytes,22,opt,name=gprs_imei,json=gprsImei,proto3" json:"gprs_imei,omitempty"`                                                   // GPRS IMEI
}

func (x *APPDtuInfoMO) Reset() {
	*x = APPDtuInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPDtuInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPDtuInfoMO) ProtoMessage() {}

func (x *APPDtuInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPDtuInfoMO.ProtoReflect.Descriptor instead.
func (*APPDtuInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{0}
}

func (x *APPDtuInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuSwVersion() int32 {
	if x != nil {
		return x.DtuSwVersion
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuHwVersion() int32 {
	if x != nil {
		return x.DtuHwVersion
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuStepTime() int32 {
	if x != nil {
		return x.DtuStepTime
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuRfHwVersion() int32 {
	if x != nil {
		return x.DtuRfHwVersion
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuRfSwVersion() int32 {
	if x != nil {
		return x.DtuRfSwVersion
	}
	return 0
}

func (x *APPDtuInfoMO) GetAccessModel() int32 {
	if x != nil {
		return x.AccessModel
	}
	return 0
}

func (x *APPDtuInfoMO) GetCommunicationTime() int32 {
	if x != nil {
		return x.CommunicationTime
	}
	return 0
}

func (x *APPDtuInfoMO) GetSignalStrength() int32 {
	if x != nil {
		return x.SignalStrength
	}
	return 0
}

func (x *APPDtuInfoMO) GetGprsVersion() string {
	if x != nil {
		return x.GprsVersion
	}
	return ""
}

func (x *APPDtuInfoMO) GetWifiVersion() string {
	if x != nil {
		return x.WifiVersion
	}
	return ""
}

func (x *APPDtuInfoMO) GetKaNumber() string {
	if x != nil {
		return x.KaNumber
	}
	return ""
}

func (x *APPDtuInfoMO) GetDtuRuleId() int32 {
	if x != nil {
		return x.DtuRuleId
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtuErrorCode() int32 {
	if x != nil {
		return x.DtuErrorCode
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtu485Mode() int32 {
	if x != nil {
		return x.Dtu485Mode
	}
	return 0
}

func (x *APPDtuInfoMO) GetDtu485Address() int32 {
	if x != nil {
		return x.Dtu485Address
	}
	return 0
}

func (x *APPDtuInfoMO) GetSub1GFrequencyBand() int32 {
	if x != nil {
		return x.Sub1GFrequencyBand
	}
	return 0
}

func (x *APPDtuInfoMO) GetSub1GChannelTotalNumber() int32 {
	if x != nil {
		return x.Sub1GChannelTotalNumber
	}
	return 0
}

func (x *APPDtuInfoMO) GetSub1GChannelNumber() int32 {
	if x != nil {
		return x.Sub1GChannelNumber
	}
	return 0
}

func (x *APPDtuInfoMO) GetSub1GRp() int32 {
	if x != nil {
		return x.Sub1GRp
	}
	return 0
}

func (x *APPDtuInfoMO) GetSub1GChannelTotal() int32 {
	if x != nil {
		return x.Sub1GChannelTotal
	}
	return 0
}

func (x *APPDtuInfoMO) GetGprsImei() string {
	if x != nil {
		return x.GprsImei
	}
	return ""
}

type APPMeterInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind        int32  `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`                        // Type of the device
	MeterSerialNumber int64  `protobuf:"varint,2,opt,name=meter_serial_number,json=meterSerialNumber,proto3" json:"meter_serial_number,omitempty"` // Meter serial number
	MeterModel        int32  `protobuf:"varint,3,opt,name=meter_model,json=meterModel,proto3" json:"meter_model,omitempty"`                        // Meter model
	MeterCt           int32  `protobuf:"varint,4,opt,name=meter_ct,json=meterCt,proto3" json:"meter_ct,omitempty"`                                 // Meter current transformer
	CommunicationWay  int32  `protobuf:"varint,5,opt,name=communication_way,json=communicationWay,proto3" json:"communication_way,omitempty"`      // Communication way
	AccessMode        int32  `protobuf:"varint,6,opt,name=access_mode,json=accessMode,proto3" json:"access_mode,omitempty"`                        // Access mode
	SwVersion         int32  `protobuf:"varint,7,opt,name=sw_version,json=swVersion,proto3" json:"sw_version,omitempty"`                           // Software version
	MeterValue        string `protobuf:"bytes,8,opt,name=meter_value,json=meterValue,proto3" json:"meter_value,omitempty"`                         // Meter value
}

func (x *APPMeterInfoMO) Reset() {
	*x = APPMeterInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPMeterInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPMeterInfoMO) ProtoMessage() {}

func (x *APPMeterInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPMeterInfoMO.ProtoReflect.Descriptor instead.
func (*APPMeterInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{1}
}

func (x *APPMeterInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *APPMeterInfoMO) GetMeterSerialNumber() int64 {
	if x != nil {
		return x.MeterSerialNumber
	}
	return 0
}

func (x *APPMeterInfoMO) GetMeterModel() int32 {
	if x != nil {
		return x.MeterModel
	}
	return 0
}

func (x *APPMeterInfoMO) GetMeterCt() int32 {
	if x != nil {
		return x.MeterCt
	}
	return 0
}

func (x *APPMeterInfoMO) GetCommunicationWay() int32 {
	if x != nil {
		return x.CommunicationWay
	}
	return 0
}

func (x *APPMeterInfoMO) GetAccessMode() int32 {
	if x != nil {
		return x.AccessMode
	}
	return 0
}

func (x *APPMeterInfoMO) GetSwVersion() int32 {
	if x != nil {
		return x.SwVersion
	}
	return 0
}

func (x *APPMeterInfoMO) GetMeterValue() string {
	if x != nil {
		return x.MeterValue
	}
	return ""
}

type APPRpInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind     int32 `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`               // Type of the device
	RpSerialNumber int64 `protobuf:"varint,2,opt,name=rp_serial_number,json=rpSerialNumber,proto3" json:"rp_serial_number,omitempty"` // RP serial number
	RpSwVersion    int32 `protobuf:"varint,3,opt,name=rp_sw_version,json=rpSwVersion,proto3" json:"rp_sw_version,omitempty"`          // RP software version
	RpHwVersion    int32 `protobuf:"varint,4,opt,name=rp_hw_version,json=rpHwVersion,proto3" json:"rp_hw_version,omitempty"`          // RP hardware version
	RpRuleId       int32 `protobuf:"varint,5,opt,name=rp_rule_id,json=rpRuleId,proto3" json:"rp_rule_id,omitempty"`                   // RP rule ID
}

func (x *APPRpInfoMO) Reset() {
	*x = APPRpInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPRpInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPRpInfoMO) ProtoMessage() {}

func (x *APPRpInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPRpInfoMO.ProtoReflect.Descriptor instead.
func (*APPRpInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{2}
}

func (x *APPRpInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *APPRpInfoMO) GetRpSerialNumber() int64 {
	if x != nil {
		return x.RpSerialNumber
	}
	return 0
}

func (x *APPRpInfoMO) GetRpSwVersion() int32 {
	if x != nil {
		return x.RpSwVersion
	}
	return 0
}

func (x *APPRpInfoMO) GetRpHwVersion() int32 {
	if x != nil {
		return x.RpHwVersion
	}
	return 0
}

func (x *APPRpInfoMO) GetRpRuleId() int32 {
	if x != nil {
		return x.RpRuleId
	}
	return 0
}

type APPPvInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind        int32 `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`                          // Type of the device
	PvSerialNumber    int64 `protobuf:"varint,2,opt,name=pv_serial_number,json=pvSerialNumber,proto3" json:"pv_serial_number,omitempty"`            // PV serial number
	PvUsfw            int32 `protobuf:"varint,3,opt,name=pv_usfw,json=pvUsfw,proto3" json:"pv_usfw,omitempty"`                                      // PV US firmware
	PvSwVersion       int32 `protobuf:"varint,4,opt,name=pv_sw_version,json=pvSwVersion,proto3" json:"pv_sw_version,omitempty"`                     // PV software version
	PvHwPartNumber    int32 `protobuf:"varint,5,opt,name=pv_hw_part_number,json=pvHwPartNumber,proto3" json:"pv_hw_part_number,omitempty"`          // PV hardware part number
	PvHwVersion       int32 `protobuf:"varint,6,opt,name=pv_hw_version,json=pvHwVersion,proto3" json:"pv_hw_version,omitempty"`                     // PV hardware version
	PvGridProfileCode int32 `protobuf:"varint,7,opt,name=pv_grid_profile_code,json=pvGridProfileCode,proto3" json:"pv_grid_profile_code,omitempty"` // PV grid profile code
	PvGridProfile     int32 `protobuf:"varint,8,opt,name=pv_grid_profile,json=pvGridProfile,proto3" json:"pv_grid_profile,omitempty"`               // PV grid profile
	PvRfHwVersion     int32 `protobuf:"varint,9,opt,name=pv_rf_hw_version,json=pvRfHwVersion,proto3" json:"pv_rf_hw_version,omitempty"`             // PV RF hardware version
	PvRfSwVersion     int32 `protobuf:"varint,10,opt,name=pv_rf_sw_version,json=pvRfSwVersion,proto3" json:"pv_rf_sw_version,omitempty"`            // PV RF software version
	MiRuleId          int32 `protobuf:"varint,11,opt,name=mi_rule_id,json=miRuleId,proto3" json:"mi_rule_id,omitempty"`                             // MI rule ID
}

func (x *APPPvInfoMO) Reset() {
	*x = APPPvInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPPvInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPPvInfoMO) ProtoMessage() {}

func (x *APPPvInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPPvInfoMO.ProtoReflect.Descriptor instead.
func (*APPPvInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{3}
}

func (x *APPPvInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *APPPvInfoMO) GetPvSerialNumber() int64 {
	if x != nil {
		return x.PvSerialNumber
	}
	return 0
}

func (x *APPPvInfoMO) GetPvUsfw() int32 {
	if x != nil {
		return x.PvUsfw
	}
	return 0
}

func (x *APPPvInfoMO) GetPvSwVersion() int32 {
	if x != nil {
		return x.PvSwVersion
	}
	return 0
}

func (x *APPPvInfoMO) GetPvHwPartNumber() int32 {
	if x != nil {
		return x.PvHwPartNumber
	}
	return 0
}

func (x *APPPvInfoMO) GetPvHwVersion() int32 {
	if x != nil {
		return x.PvHwVersion
	}
	return 0
}

func (x *APPPvInfoMO) GetPvGridProfileCode() int32 {
	if x != nil {
		return x.PvGridProfileCode
	}
	return 0
}

func (x *APPPvInfoMO) GetPvGridProfile() int32 {
	if x != nil {
		return x.PvGridProfile
	}
	return 0
}

func (x *APPPvInfoMO) GetPvRfHwVersion() int32 {
	if x != nil {
		return x.PvRfHwVersion
	}
	return 0
}

func (x *APPPvInfoMO) GetPvRfSwVersion() int32 {
	if x != nil {
		return x.PvRfSwVersion
	}
	return 0
}

func (x *APPPvInfoMO) GetMiRuleId() int32 {
	if x != nil {
		return x.MiRuleId
	}
	return 0
}

type APPFeatureMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32  `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`    // Feature key
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Feature value
}

func (x *APPFeatureMO) Reset() {
	*x = APPFeatureMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPFeatureMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPFeatureMO) ProtoMessage() {}

func (x *APPFeatureMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPFeatureMO.ProtoReflect.Descriptor instead.
func (*APPFeatureMO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{4}
}

func (x *APPFeatureMO) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *APPFeatureMO) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type APPInfoDataReqDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DtuSerialNumber string            `protobuf:"bytes,1,opt,name=dtu_serial_number,json=dtuSerialNumber,proto3" json:"dtu_serial_number,omitempty"` // DTU serial number
	Timestamp       uint32            `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                     // Timestamp
	DeviceNumber    int32             `protobuf:"varint,3,opt,name=device_number,json=deviceNumber,proto3" json:"device_number,omitempty"`           // Device number
	PvNumber        int32             `protobuf:"varint,4,opt,name=pv_number,json=pvNumber,proto3" json:"pv_number,omitempty"`                       // PV number
	PackageNumber   int32             `protobuf:"varint,5,opt,name=package_number,json=packageNumber,proto3" json:"package_number,omitempty"`        // Package number
	CurrentPackage  int32             `protobuf:"varint,6,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"`     // Current package
	Channel         int32             `protobuf:"varint,7,opt,name=channel,proto3" json:"channel,omitempty"`                                         // Channel
	DtuInfo         *APPDtuInfoMO     `protobuf:"bytes,8,opt,name=dtu_info,json=dtuInfo,proto3" json:"dtu_info,omitempty"`                           // DTU information
	MeterInfo       []*APPMeterInfoMO `protobuf:"bytes,9,rep,name=meter_info,json=meterInfo,proto3" json:"meter_info,omitempty"`                     // Meter information
	RpInfo          []*APPRpInfoMO    `protobuf:"bytes,10,rep,name=rp_info,json=rpInfo,proto3" json:"rp_info,omitempty"`                             // RP information
	PvInfo          []*APPPvInfoMO    `protobuf:"bytes,11,rep,name=pv_info,json=pvInfo,proto3" json:"pv_info,omitempty"`                             // PV information
	UnknownField    uint32            `protobuf:"varint,12,opt,name=unknown_field,json=unknownField,proto3" json:"unknown_field,omitempty"`          // Unknown field
	AppFeatures     []*APPFeatureMO   `protobuf:"bytes,13,rep,name=app_features,json=appFeatures,proto3" json:"app_features,omitempty"`              // Application features
}

func (x *APPInfoDataReqDTO) Reset() {
	*x = APPInfoDataReqDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPInfoDataReqDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPInfoDataReqDTO) ProtoMessage() {}

func (x *APPInfoDataReqDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPInfoDataReqDTO.ProtoReflect.Descriptor instead.
func (*APPInfoDataReqDTO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{5}
}

func (x *APPInfoDataReqDTO) GetDtuSerialNumber() string {
	if x != nil {
		return x.DtuSerialNumber
	}
	return ""
}

func (x *APPInfoDataReqDTO) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetDeviceNumber() int32 {
	if x != nil {
		return x.DeviceNumber
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetPvNumber() int32 {
	if x != nil {
		return x.PvNumber
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetPackageNumber() int32 {
	if x != nil {
		return x.PackageNumber
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetDtuInfo() *APPDtuInfoMO {
	if x != nil {
		return x.DtuInfo
	}
	return nil
}

func (x *APPInfoDataReqDTO) GetMeterInfo() []*APPMeterInfoMO {
	if x != nil {
		return x.MeterInfo
	}
	return nil
}

func (x *APPInfoDataReqDTO) GetRpInfo() []*APPRpInfoMO {
	if x != nil {
		return x.RpInfo
	}
	return nil
}

func (x *APPInfoDataReqDTO) GetPvInfo() []*APPPvInfoMO {
	if x != nil {
		return x.PvInfo
	}
	return nil
}

func (x *APPInfoDataReqDTO) GetUnknownField() uint32 {
	if x != nil {
		return x.UnknownField
	}
	return 0
}

func (x *APPInfoDataReqDTO) GetAppFeatures() []*APPFeatureMO {
	if x != nil {
		return x.AppFeatures
	}
	return nil
}

type APPInfoDataResDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeYmdHms     string `protobuf:"bytes,1,opt,name=time_ymd_hms,json=timeYmdHms,proto3" json:"time_ymd_hms,omitempty"`            // Date and time
	Offset         int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                                       // Offset
	CurrentPackage int32  `protobuf:"varint,3,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package
	ErrorCode      int32  `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`                // Error code
	Time           uint32 `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`                                           // Timestamp
}

func (x *APPInfoDataResDTO) Reset() {
	*x = APPInfoDataResDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_APPInfomationData_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APPInfoDataResDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APPInfoDataResDTO) ProtoMessage() {}

func (x *APPInfoDataResDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_APPInfomationData_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APPInfoDataResDTO.ProtoReflect.Descriptor instead.
func (*APPInfoDataResDTO) Descriptor() ([]byte, []int) {
	return file_protos_APPInfomationData_proto_rawDescGZIP(), []int{6}
}

func (x *APPInfoDataResDTO) GetTimeYmdHms() string {
	if x != nil {
		return x.TimeYmdHms
	}
	return ""
}

func (x *APPInfoDataResDTO) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *APPInfoDataResDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *APPInfoDataResDTO) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *APPInfoDataResDTO) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_protos_APPInfomationData_proto protoreflect.FileDescriptor

var file_protos_APPInfomationData_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x41, 0x50, 0x50, 0x49, 0x6e, 0x66, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xea, 0x06, 0x0a, 0x0c, 0x41, 0x50, 0x50, 0x44, 0x74, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x77, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x74, 0x75, 0x53,
	0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x74, 0x75, 0x5f,
	0x68, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x74, 0x75, 0x48, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x74, 0x75, 0x53, 0x74, 0x65, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x64, 0x74, 0x75, 0x5f, 0x72, 0x66, 0x5f, 0x68, 0x77, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64,
	0x74, 0x75, 0x52, 0x66, 0x48, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x11, 0x64, 0x74, 0x75, 0x5f, 0x72, 0x66, 0x5f, 0x73, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x74, 0x75, 0x52, 0x66, 0x53,
	0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x70, 0x72, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x70, 0x72, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69,
	0x66, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x61, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x61,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x74, 0x75, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x74, 0x75,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x74, 0x75, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x74, 0x75, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x74, 0x75, 0x34, 0x38, 0x35, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x74, 0x75, 0x34, 0x38, 0x35, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x74, 0x75, 0x34, 0x38, 0x35, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x74, 0x75, 0x34, 0x38, 0x35, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x31, 0x67, 0x5f, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x73, 0x75, 0x62, 0x31, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x75, 0x62, 0x31, 0x67, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x73, 0x75, 0x62, 0x31,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x31, 0x67, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x73, 0x75, 0x62, 0x31, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x31, 0x67, 0x5f, 0x72,
	0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x31, 0x67, 0x52, 0x70,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x31, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73,
	0x75, 0x62, 0x31, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x70, 0x72, 0x73, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x70, 0x72, 0x73, 0x49, 0x6d, 0x65, 0x69, 0x22, 0xab, 0x02,
	0x0a, 0x0e, 0x41, 0x50, 0x50, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x74, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0b,
	0x41, 0x50, 0x50, 0x52, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x70, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x70, 0x5f, 0x73, 0x77, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x70, 0x53, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x70,
	0x5f, 0x68, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x70, 0x48, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x0a, 0x72, 0x70, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xad, 0x03, 0x0a,
	0x0b, 0x41, 0x50, 0x50, 0x50, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x76, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x76, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x76, 0x5f, 0x75, 0x73,
	0x66, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x76, 0x55, 0x73, 0x66, 0x77,
	0x12, 0x22, 0x0a, 0x0d, 0x70, 0x76, 0x5f, 0x73, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x76, 0x53, 0x77, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x76, 0x5f, 0x68, 0x77, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x76, 0x48, 0x77, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0d, 0x70, 0x76, 0x5f, 0x68, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x76, 0x48, 0x77, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x76, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x70, 0x76, 0x47, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x76, 0x5f, 0x67, 0x72, 0x69, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x76, 0x47, 0x72, 0x69, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10,
	0x70, 0x76, 0x5f, 0x72, 0x66, 0x5f, 0x68, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x76, 0x52, 0x66, 0x48, 0x77, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x10, 0x70, 0x76, 0x5f, 0x72, 0x66, 0x5f, 0x73,
	0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x70, 0x76, 0x52, 0x66, 0x53, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x0a, 0x6d, 0x69, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0c,
	0x41, 0x50, 0x50, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x4f, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x88, 0x04, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x44, 0x54, 0x4f, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x74,
	0x75, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x74, 0x75, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x76, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x76,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x28, 0x0a, 0x08, 0x64, 0x74, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x50, 0x50, 0x44, 0x74, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x4f, 0x52, 0x07, 0x64, 0x74, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0a, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x41, 0x50, 0x50, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x52,
	0x09, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x50,
	0x50, 0x52, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x52, 0x06, 0x72, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x76, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x50, 0x50, 0x50, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f,
	0x52, 0x06, 0x70, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x50, 0x50, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4d, 0x4f, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22,
	0xa9, 0x01, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x44, 0x54, 0x4f, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x79, 0x6d,
	0x64, 0x5f, 0x68, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x59, 0x6d, 0x64, 0x48, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x23, 0x5a, 0x0f, 0x68,
	0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0xaa, 0x02,
	0x0f, 0x48, 0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_APPInfomationData_proto_rawDescOnce sync.Once
	file_protos_APPInfomationData_proto_rawDescData = file_protos_APPInfomationData_proto_rawDesc
)

func file_protos_APPInfomationData_proto_rawDescGZIP() []byte {
	file_protos_APPInfomationData_proto_rawDescOnce.Do(func() {
		file_protos_APPInfomationData_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_APPInfomationData_proto_rawDescData)
	})
	return file_protos_APPInfomationData_proto_rawDescData
}

var file_protos_APPInfomationData_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protos_APPInfomationData_proto_goTypes = []any{
	(*APPDtuInfoMO)(nil),      // 0: APPDtuInfoMO
	(*APPMeterInfoMO)(nil),    // 1: APPMeterInfoMO
	(*APPRpInfoMO)(nil),       // 2: APPRpInfoMO
	(*APPPvInfoMO)(nil),       // 3: APPPvInfoMO
	(*APPFeatureMO)(nil),      // 4: APPFeatureMO
	(*APPInfoDataReqDTO)(nil), // 5: APPInfoDataReqDTO
	(*APPInfoDataResDTO)(nil), // 6: APPInfoDataResDTO
}
var file_protos_APPInfomationData_proto_depIdxs = []int32{
	0, // 0: APPInfoDataReqDTO.dtu_info:type_name -> APPDtuInfoMO
	1, // 1: APPInfoDataReqDTO.meter_info:type_name -> APPMeterInfoMO
	2, // 2: APPInfoDataReqDTO.rp_info:type_name -> APPRpInfoMO
	3, // 3: APPInfoDataReqDTO.pv_info:type_name -> APPPvInfoMO
	4, // 4: APPInfoDataReqDTO.app_features:type_name -> APPFeatureMO
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_protos_APPInfomationData_proto_init() }
func file_protos_APPInfomationData_proto_init() {
	if File_protos_APPInfomationData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_APPInfomationData_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*APPDtuInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*APPMeterInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*APPRpInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*APPPvInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*APPFeatureMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*APPInfoDataReqDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_APPInfomationData_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*APPInfoDataResDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_APPInfomationData_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_APPInfomationData_proto_goTypes,
		DependencyIndexes: file_protos_APPInfomationData_proto_depIdxs,
		MessageInfos:      file_protos_APPInfomationData_proto_msgTypes,
	}.Build()
	File_protos_APPInfomationData_proto = out.File
	file_protos_APPInfomationData_proto_rawDesc = nil
	file_protos_APPInfomationData_proto_goTypes = nil
	file_protos_APPInfomationData_proto_depIdxs = nil
}
