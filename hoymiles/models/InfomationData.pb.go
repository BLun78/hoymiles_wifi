// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: protos/InfomationData.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DtuInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind             int32  `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`
	DtuSw                  int32  `protobuf:"varint,2,opt,name=dtu_sw,json=dtuSw,proto3" json:"dtu_sw,omitempty"`
	DtuHw                  int32  `protobuf:"varint,3,opt,name=dtu_hw,json=dtuHw,proto3" json:"dtu_hw,omitempty"`
	DtuStepTime            int32  `protobuf:"varint,4,opt,name=dtu_step_time,json=dtuStepTime,proto3" json:"dtu_step_time,omitempty"`
	DtuRfHw                int32  `protobuf:"varint,5,opt,name=dtu_rf_hw,json=dtuRfHw,proto3" json:"dtu_rf_hw,omitempty"`
	DtuRfSw                int32  `protobuf:"varint,6,opt,name=dtu_rf_sw,json=dtuRfSw,proto3" json:"dtu_rf_sw,omitempty"`
	AccessModel            int32  `protobuf:"varint,7,opt,name=access_model,json=accessModel,proto3" json:"access_model,omitempty"`
	GprsVsn                string `protobuf:"bytes,8,opt,name=gprs_vsn,json=gprsVsn,proto3" json:"gprs_vsn,omitempty"`
	WifiVsn                string `protobuf:"bytes,9,opt,name=wifi_vsn,json=wifiVsn,proto3" json:"wifi_vsn,omitempty"`
	KaNub                  string `protobuf:"bytes,10,opt,name=ka_nub,json=kaNub,proto3" json:"ka_nub,omitempty"`
	DtuRuleId              int32  `protobuf:"varint,11,opt,name=dtu_rule_id,json=dtuRuleId,proto3" json:"dtu_rule_id,omitempty"`
	DtuErrorCode           int32  `protobuf:"varint,12,opt,name=dtu_error_code,json=dtuErrorCode,proto3" json:"dtu_error_code,omitempty"`
	GridType               int32  `protobuf:"varint,13,opt,name=grid_type,json=gridType,proto3" json:"grid_type,omitempty"`
	ZeroExportSwitch       int32  `protobuf:"varint,14,opt,name=zero_export_switch,json=zeroExportSwitch,proto3" json:"zero_export_switch,omitempty"`
	SurplusPowerA          int32  `protobuf:"varint,15,opt,name=surplus_power_a,json=surplusPowerA,proto3" json:"surplus_power_a,omitempty"`
	SurplusPowerB          int32  `protobuf:"varint,16,opt,name=surplus_power_b,json=surplusPowerB,proto3" json:"surplus_power_b,omitempty"`
	SurplusPowerC          int32  `protobuf:"varint,17,opt,name=surplus_power_c,json=surplusPowerC,proto3" json:"surplus_power_c,omitempty"`
	ZeroExportControl      int32  `protobuf:"varint,18,opt,name=zero_export_control,json=zeroExportControl,proto3" json:"zero_export_control,omitempty"`
	PhaseBalanceSwitch     int32  `protobuf:"varint,19,opt,name=phase_balance_switch,json=phaseBalanceSwitch,proto3" json:"phase_balance_switch,omitempty"`
	ToleranceBetweenPhases int32  `protobuf:"varint,20,opt,name=tolerance_between_phases,json=toleranceBetweenPhases,proto3" json:"tolerance_between_phases,omitempty"`
}

func (x *DtuInfoMO) Reset() {
	*x = DtuInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DtuInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DtuInfoMO) ProtoMessage() {}

func (x *DtuInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DtuInfoMO.ProtoReflect.Descriptor instead.
func (*DtuInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{0}
}

func (x *DtuInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *DtuInfoMO) GetDtuSw() int32 {
	if x != nil {
		return x.DtuSw
	}
	return 0
}

func (x *DtuInfoMO) GetDtuHw() int32 {
	if x != nil {
		return x.DtuHw
	}
	return 0
}

func (x *DtuInfoMO) GetDtuStepTime() int32 {
	if x != nil {
		return x.DtuStepTime
	}
	return 0
}

func (x *DtuInfoMO) GetDtuRfHw() int32 {
	if x != nil {
		return x.DtuRfHw
	}
	return 0
}

func (x *DtuInfoMO) GetDtuRfSw() int32 {
	if x != nil {
		return x.DtuRfSw
	}
	return 0
}

func (x *DtuInfoMO) GetAccessModel() int32 {
	if x != nil {
		return x.AccessModel
	}
	return 0
}

func (x *DtuInfoMO) GetGprsVsn() string {
	if x != nil {
		return x.GprsVsn
	}
	return ""
}

func (x *DtuInfoMO) GetWifiVsn() string {
	if x != nil {
		return x.WifiVsn
	}
	return ""
}

func (x *DtuInfoMO) GetKaNub() string {
	if x != nil {
		return x.KaNub
	}
	return ""
}

func (x *DtuInfoMO) GetDtuRuleId() int32 {
	if x != nil {
		return x.DtuRuleId
	}
	return 0
}

func (x *DtuInfoMO) GetDtuErrorCode() int32 {
	if x != nil {
		return x.DtuErrorCode
	}
	return 0
}

func (x *DtuInfoMO) GetGridType() int32 {
	if x != nil {
		return x.GridType
	}
	return 0
}

func (x *DtuInfoMO) GetZeroExportSwitch() int32 {
	if x != nil {
		return x.ZeroExportSwitch
	}
	return 0
}

func (x *DtuInfoMO) GetSurplusPowerA() int32 {
	if x != nil {
		return x.SurplusPowerA
	}
	return 0
}

func (x *DtuInfoMO) GetSurplusPowerB() int32 {
	if x != nil {
		return x.SurplusPowerB
	}
	return 0
}

func (x *DtuInfoMO) GetSurplusPowerC() int32 {
	if x != nil {
		return x.SurplusPowerC
	}
	return 0
}

func (x *DtuInfoMO) GetZeroExportControl() int32 {
	if x != nil {
		return x.ZeroExportControl
	}
	return 0
}

func (x *DtuInfoMO) GetPhaseBalanceSwitch() int32 {
	if x != nil {
		return x.PhaseBalanceSwitch
	}
	return 0
}

func (x *DtuInfoMO) GetToleranceBetweenPhases() int32 {
	if x != nil {
		return x.ToleranceBetweenPhases
	}
	return 0
}

type MeterInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind int32 `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`
	MeterSn    int64 `protobuf:"varint,2,opt,name=meter_sn,json=meterSn,proto3" json:"meter_sn,omitempty"`
	MeterModel int32 `protobuf:"varint,3,opt,name=meter_model,json=meterModel,proto3" json:"meter_model,omitempty"`
	MeterCt    int32 `protobuf:"varint,4,opt,name=meter_ct,json=meterCt,proto3" json:"meter_ct,omitempty"`
	ComWay     int32 `protobuf:"varint,5,opt,name=com_way,json=comWay,proto3" json:"com_way,omitempty"`
	AccessMode int32 `protobuf:"varint,6,opt,name=access_mode,json=accessMode,proto3" json:"access_mode,omitempty"`
}

func (x *MeterInfoMO) Reset() {
	*x = MeterInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterInfoMO) ProtoMessage() {}

func (x *MeterInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterInfoMO.ProtoReflect.Descriptor instead.
func (*MeterInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{1}
}

func (x *MeterInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *MeterInfoMO) GetMeterSn() int64 {
	if x != nil {
		return x.MeterSn
	}
	return 0
}

func (x *MeterInfoMO) GetMeterModel() int32 {
	if x != nil {
		return x.MeterModel
	}
	return 0
}

func (x *MeterInfoMO) GetMeterCt() int32 {
	if x != nil {
		return x.MeterCt
	}
	return 0
}

func (x *MeterInfoMO) GetComWay() int32 {
	if x != nil {
		return x.ComWay
	}
	return 0
}

func (x *MeterInfoMO) GetAccessMode() int32 {
	if x != nil {
		return x.AccessMode
	}
	return 0
}

type RpInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind int32 `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`
	RpSn       int64 `protobuf:"varint,2,opt,name=rp_sn,json=rpSn,proto3" json:"rp_sn,omitempty"`
	RpSw       int32 `protobuf:"varint,3,opt,name=rp_sw,json=rpSw,proto3" json:"rp_sw,omitempty"`
	RpHw       int32 `protobuf:"varint,4,opt,name=rp_hw,json=rpHw,proto3" json:"rp_hw,omitempty"`
	RpRuleId   int32 `protobuf:"varint,5,opt,name=rp_rule_id,json=rpRuleId,proto3" json:"rp_rule_id,omitempty"`
}

func (x *RpInfoMO) Reset() {
	*x = RpInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpInfoMO) ProtoMessage() {}

func (x *RpInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpInfoMO.ProtoReflect.Descriptor instead.
func (*RpInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{2}
}

func (x *RpInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *RpInfoMO) GetRpSn() int64 {
	if x != nil {
		return x.RpSn
	}
	return 0
}

func (x *RpInfoMO) GetRpSw() int32 {
	if x != nil {
		return x.RpSw
	}
	return 0
}

func (x *RpInfoMO) GetRpHw() int32 {
	if x != nil {
		return x.RpHw
	}
	return 0
}

func (x *RpInfoMO) GetRpRuleId() int32 {
	if x != nil {
		return x.RpRuleId
	}
	return 0
}

type PvInfoMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceKind int32 `protobuf:"varint,1,opt,name=device_kind,json=deviceKind,proto3" json:"device_kind,omitempty"`
	PvSn       int64 `protobuf:"varint,2,opt,name=pv_sn,json=pvSn,proto3" json:"pv_sn,omitempty"`
	PvUsfw     int32 `protobuf:"varint,3,opt,name=pv_usfw,json=pvUsfw,proto3" json:"pv_usfw,omitempty"`
	PvSw       int32 `protobuf:"varint,4,opt,name=pv_sw,json=pvSw,proto3" json:"pv_sw,omitempty"`
	PvHwPn     int32 `protobuf:"varint,5,opt,name=pv_hw_pn,json=pvHwPn,proto3" json:"pv_hw_pn,omitempty"`
	PvHw       int32 `protobuf:"varint,6,opt,name=pv_hw,json=pvHw,proto3" json:"pv_hw,omitempty"`
	PvGpfCode  int32 `protobuf:"varint,7,opt,name=pv_gpf_code,json=pvGpfCode,proto3" json:"pv_gpf_code,omitempty"`
	PvGpf      int32 `protobuf:"varint,8,opt,name=pv_gpf,json=pvGpf,proto3" json:"pv_gpf,omitempty"`
	PvRfHw     int32 `protobuf:"varint,9,opt,name=pv_rf_hw,json=pvRfHw,proto3" json:"pv_rf_hw,omitempty"`
	PvRfSw     int32 `protobuf:"varint,10,opt,name=pv_rf_sw,json=pvRfSw,proto3" json:"pv_rf_sw,omitempty"`
	MiRuleId   int32 `protobuf:"varint,11,opt,name=mi_rule_id,json=miRuleId,proto3" json:"mi_rule_id,omitempty"`
}

func (x *PvInfoMO) Reset() {
	*x = PvInfoMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvInfoMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvInfoMO) ProtoMessage() {}

func (x *PvInfoMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvInfoMO.ProtoReflect.Descriptor instead.
func (*PvInfoMO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{3}
}

func (x *PvInfoMO) GetDeviceKind() int32 {
	if x != nil {
		return x.DeviceKind
	}
	return 0
}

func (x *PvInfoMO) GetPvSn() int64 {
	if x != nil {
		return x.PvSn
	}
	return 0
}

func (x *PvInfoMO) GetPvUsfw() int32 {
	if x != nil {
		return x.PvUsfw
	}
	return 0
}

func (x *PvInfoMO) GetPvSw() int32 {
	if x != nil {
		return x.PvSw
	}
	return 0
}

func (x *PvInfoMO) GetPvHwPn() int32 {
	if x != nil {
		return x.PvHwPn
	}
	return 0
}

func (x *PvInfoMO) GetPvHw() int32 {
	if x != nil {
		return x.PvHw
	}
	return 0
}

func (x *PvInfoMO) GetPvGpfCode() int32 {
	if x != nil {
		return x.PvGpfCode
	}
	return 0
}

func (x *PvInfoMO) GetPvGpf() int32 {
	if x != nil {
		return x.PvGpf
	}
	return 0
}

func (x *PvInfoMO) GetPvRfHw() int32 {
	if x != nil {
		return x.PvRfHw
	}
	return 0
}

func (x *PvInfoMO) GetPvRfSw() int32 {
	if x != nil {
		return x.PvRfSw
	}
	return 0
}

func (x *PvInfoMO) GetMiRuleId() int32 {
	if x != nil {
		return x.MiRuleId
	}
	return 0
}

type FeatureMO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32  `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FeatureMO) Reset() {
	*x = FeatureMO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureMO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureMO) ProtoMessage() {}

func (x *FeatureMO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureMO.ProtoReflect.Descriptor instead.
func (*FeatureMO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{4}
}

func (x *FeatureMO) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *FeatureMO) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type InfoDataReqDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DtuSn      string         `protobuf:"bytes,1,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`
	Time       int32          `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	DeviceNub  int32          `protobuf:"varint,3,opt,name=device_nub,json=deviceNub,proto3" json:"device_nub,omitempty"`
	PvNub      int32          `protobuf:"varint,4,opt,name=pv_nub,json=pvNub,proto3" json:"pv_nub,omitempty"`
	PackageNub int32          `protobuf:"varint,5,opt,name=package_nub,json=packageNub,proto3" json:"package_nub,omitempty"`
	PackageNow int32          `protobuf:"varint,6,opt,name=package_now,json=packageNow,proto3" json:"package_now,omitempty"`
	Channel    int32          `protobuf:"varint,7,opt,name=channel,proto3" json:"channel,omitempty"`
	MDtuInfo   *DtuInfoMO     `protobuf:"bytes,8,opt,name=mDtuInfo,proto3" json:"mDtuInfo,omitempty"`
	MMeterInfo []*MeterInfoMO `protobuf:"bytes,9,rep,name=mMeterInfo,proto3" json:"mMeterInfo,omitempty"`
	MRpInfo    []*RpInfoMO    `protobuf:"bytes,10,rep,name=mRpInfo,proto3" json:"mRpInfo,omitempty"`
	MpvInfo    []*PvInfoMO    `protobuf:"bytes,11,rep,name=mpvInfo,proto3" json:"mpvInfo,omitempty"`
	MFeature   []*FeatureMO   `protobuf:"bytes,12,rep,name=m_feature,json=mFeature,proto3" json:"m_feature,omitempty"`
}

func (x *InfoDataReqDTO) Reset() {
	*x = InfoDataReqDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoDataReqDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoDataReqDTO) ProtoMessage() {}

func (x *InfoDataReqDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoDataReqDTO.ProtoReflect.Descriptor instead.
func (*InfoDataReqDTO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{5}
}

func (x *InfoDataReqDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *InfoDataReqDTO) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *InfoDataReqDTO) GetDeviceNub() int32 {
	if x != nil {
		return x.DeviceNub
	}
	return 0
}

func (x *InfoDataReqDTO) GetPvNub() int32 {
	if x != nil {
		return x.PvNub
	}
	return 0
}

func (x *InfoDataReqDTO) GetPackageNub() int32 {
	if x != nil {
		return x.PackageNub
	}
	return 0
}

func (x *InfoDataReqDTO) GetPackageNow() int32 {
	if x != nil {
		return x.PackageNow
	}
	return 0
}

func (x *InfoDataReqDTO) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *InfoDataReqDTO) GetMDtuInfo() *DtuInfoMO {
	if x != nil {
		return x.MDtuInfo
	}
	return nil
}

func (x *InfoDataReqDTO) GetMMeterInfo() []*MeterInfoMO {
	if x != nil {
		return x.MMeterInfo
	}
	return nil
}

func (x *InfoDataReqDTO) GetMRpInfo() []*RpInfoMO {
	if x != nil {
		return x.MRpInfo
	}
	return nil
}

func (x *InfoDataReqDTO) GetMpvInfo() []*PvInfoMO {
	if x != nil {
		return x.MpvInfo
	}
	return nil
}

func (x *InfoDataReqDTO) GetMFeature() []*FeatureMO {
	if x != nil {
		return x.MFeature
	}
	return nil
}

type InfoDataResDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeYmdHms string `protobuf:"bytes,1,opt,name=time_ymd_hms,json=timeYmdHms,proto3" json:"time_ymd_hms,omitempty"`
	Offset     int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PackageNow int32  `protobuf:"varint,3,opt,name=package_now,json=packageNow,proto3" json:"package_now,omitempty"`
	ErrorCode  int32  `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	Time       int32  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *InfoDataResDTO) Reset() {
	*x = InfoDataResDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_InfomationData_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoDataResDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoDataResDTO) ProtoMessage() {}

func (x *InfoDataResDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_InfomationData_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoDataResDTO.ProtoReflect.Descriptor instead.
func (*InfoDataResDTO) Descriptor() ([]byte, []int) {
	return file_protos_InfomationData_proto_rawDescGZIP(), []int{6}
}

func (x *InfoDataResDTO) GetTimeYmdHms() string {
	if x != nil {
		return x.TimeYmdHms
	}
	return ""
}

func (x *InfoDataResDTO) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *InfoDataResDTO) GetPackageNow() int32 {
	if x != nil {
		return x.PackageNow
	}
	return 0
}

func (x *InfoDataResDTO) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *InfoDataResDTO) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_protos_InfomationData_proto protoreflect.FileDescriptor

var file_protos_InfomationData_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x49, 0x6e, 0x66, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x05,
	0x0a, 0x09, 0x44, 0x74, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x74, 0x75, 0x5f, 0x73, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x74,
	0x75, 0x53, 0x77, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x74, 0x75, 0x5f, 0x68, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x74, 0x75, 0x48, 0x77, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x74,
	0x75, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x74, 0x75, 0x53, 0x74, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x09, 0x64, 0x74, 0x75, 0x5f, 0x72, 0x66, 0x5f, 0x68, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x74, 0x75, 0x52, 0x66, 0x48, 0x77, 0x12, 0x1a, 0x0a, 0x09, 0x64, 0x74,
	0x75, 0x5f, 0x72, 0x66, 0x5f, 0x73, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64,
	0x74, 0x75, 0x52, 0x66, 0x53, 0x77, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x72,
	0x73, 0x5f, 0x76, 0x73, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x72,
	0x73, 0x56, 0x73, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x76, 0x73, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x66, 0x69, 0x56, 0x73, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x6b, 0x61, 0x5f, 0x6e, 0x75, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6b, 0x61, 0x4e, 0x75, 0x62, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x74, 0x75, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x74, 0x75,
	0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x74, 0x75, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x74, 0x75, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x67, 0x72, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x7a, 0x65, 0x72,
	0x6f, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x7a, 0x65, 0x72, 0x6f, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x41, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75,
	0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x12,
	0x2e, 0x0a, 0x13, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x7a, 0x65,
	0x72, 0x6f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x30, 0x0a, 0x14, 0x70, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x62,
	0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x5f, 0x70, 0x68, 0x61, 0x73, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x16, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x0b,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x5f, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x57, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x08, 0x52, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x72,
	0x70, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x70, 0x53, 0x6e,
	0x12, 0x13, 0x0a, 0x05, 0x72, 0x70, 0x5f, 0x73, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x70, 0x53, 0x77, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x70, 0x5f, 0x68, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x70, 0x48, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x72, 0x70,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xa6, 0x02, 0x0a, 0x08, 0x50, 0x76, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x76, 0x5f, 0x73, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x76, 0x53, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x76, 0x5f, 0x75, 0x73, 0x66, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x76,
	0x55, 0x73, 0x66, 0x77, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x76, 0x5f, 0x73, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x76, 0x53, 0x77, 0x12, 0x18, 0x0a, 0x08, 0x70, 0x76, 0x5f,
	0x68, 0x77, 0x5f, 0x70, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x76, 0x48,
	0x77, 0x50, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x76, 0x5f, 0x68, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x76, 0x48, 0x77, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x76, 0x5f, 0x67,
	0x70, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x76, 0x47, 0x70, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x76, 0x5f, 0x67,
	0x70, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x76, 0x47, 0x70, 0x66, 0x12,
	0x18, 0x0a, 0x08, 0x70, 0x76, 0x5f, 0x72, 0x66, 0x5f, 0x68, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x76, 0x52, 0x66, 0x48, 0x77, 0x12, 0x18, 0x0a, 0x08, 0x70, 0x76, 0x5f,
	0x72, 0x66, 0x5f, 0x73, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x76, 0x52,
	0x66, 0x53, 0x77, 0x12, 0x1c, 0x0a, 0x0a, 0x6d, 0x69, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x52, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x33, 0x0a, 0x09, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x4f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x03, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x44, 0x54, 0x4f, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x74, 0x75,
	0x5f, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x75, 0x53, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x75, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x76, 0x5f, 0x6e, 0x75, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x76, 0x4e, 0x75, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x44, 0x74, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x74, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x4f, 0x52, 0x08, 0x6d, 0x44, 0x74, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c,
	0x0a, 0x0a, 0x6d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f,
	0x52, 0x0a, 0x6d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x07,
	0x6d, 0x52, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x52, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x52, 0x07, 0x6d, 0x52, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x0a, 0x07, 0x6d, 0x70, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x4f, 0x52, 0x07, 0x6d,
	0x70, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x09, 0x6d, 0x5f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x4d, 0x4f, 0x52, 0x08, 0x6d, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x44,
	0x54, 0x4f, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x79, 0x6d, 0x64, 0x5f, 0x68,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x59, 0x6d,
	0x64, 0x48, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x23, 0x5a, 0x0f, 0x68, 0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0xaa, 0x02, 0x0f, 0x48, 0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_InfomationData_proto_rawDescOnce sync.Once
	file_protos_InfomationData_proto_rawDescData = file_protos_InfomationData_proto_rawDesc
)

func file_protos_InfomationData_proto_rawDescGZIP() []byte {
	file_protos_InfomationData_proto_rawDescOnce.Do(func() {
		file_protos_InfomationData_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_InfomationData_proto_rawDescData)
	})
	return file_protos_InfomationData_proto_rawDescData
}

var file_protos_InfomationData_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_protos_InfomationData_proto_goTypes = []any{
	(*DtuInfoMO)(nil),      // 0: DtuInfoMO
	(*MeterInfoMO)(nil),    // 1: MeterInfoMO
	(*RpInfoMO)(nil),       // 2: RpInfoMO
	(*PvInfoMO)(nil),       // 3: PvInfoMO
	(*FeatureMO)(nil),      // 4: FeatureMO
	(*InfoDataReqDTO)(nil), // 5: InfoDataReqDTO
	(*InfoDataResDTO)(nil), // 6: InfoDataResDTO
}
var file_protos_InfomationData_proto_depIdxs = []int32{
	0, // 0: InfoDataReqDTO.mDtuInfo:type_name -> DtuInfoMO
	1, // 1: InfoDataReqDTO.mMeterInfo:type_name -> MeterInfoMO
	2, // 2: InfoDataReqDTO.mRpInfo:type_name -> RpInfoMO
	3, // 3: InfoDataReqDTO.mpvInfo:type_name -> PvInfoMO
	4, // 4: InfoDataReqDTO.m_feature:type_name -> FeatureMO
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_protos_InfomationData_proto_init() }
func file_protos_InfomationData_proto_init() {
	if File_protos_InfomationData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_InfomationData_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DtuInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MeterInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RpInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PvInfoMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*FeatureMO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*InfoDataReqDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_InfomationData_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*InfoDataResDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_InfomationData_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_InfomationData_proto_goTypes,
		DependencyIndexes: file_protos_InfomationData_proto_depIdxs,
		MessageInfos:      file_protos_InfomationData_proto_msgTypes,
	}.Build()
	File_protos_InfomationData_proto = out.File
	file_protos_InfomationData_proto_rawDesc = nil
	file_protos_InfomationData_proto_goTypes = nil
	file_protos_InfomationData_proto_depIdxs = nil
}
