// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: protos/DevConfig.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DevConfigFetchResDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime   int32  `protobuf:"varint,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`       // Timestamp of the response
	TransactionId  int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`    // Transaction ID
	DtuSn          string `protobuf:"bytes,3,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                             // DTU serial number
	DevSn          string `protobuf:"bytes,4,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                             // Device serial number
	CurrentPackage int32  `protobuf:"varint,5,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	RuleType       int32  `protobuf:"varint,6,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigFetchResDTO) Reset() {
	*x = DevConfigFetchResDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigFetchResDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigFetchResDTO) ProtoMessage() {}

func (x *DevConfigFetchResDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigFetchResDTO.ProtoReflect.Descriptor instead.
func (*DevConfigFetchResDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{0}
}

func (x *DevConfigFetchResDTO) GetResponseTime() int32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *DevConfigFetchResDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigFetchResDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigFetchResDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigFetchResDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigFetchResDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type DevConfigFetchReqDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestTime    int32  `protobuf:"varint,1,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`           // Timestamp of the request
	TransactionId  int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`     // Transaction ID
	RuleId         int32  `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`                          // Rule ID
	Data           string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                             // Data
	Crc            int32  `protobuf:"varint,5,opt,name=crc,proto3" json:"crc,omitempty"`                                              // CRC value
	DtuSn          string `protobuf:"bytes,6,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                              // DTU serial number
	DevSn          string `protobuf:"bytes,7,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                              // Device serial number
	CfgData        string `protobuf:"bytes,8,opt,name=cfg_data,json=cfgData,proto3" json:"cfg_data,omitempty"`                        // Configuration data
	CfgCrc         int32  `protobuf:"varint,9,opt,name=cfg_crc,json=cfgCrc,proto3" json:"cfg_crc,omitempty"`                          // Configuration CRC value
	TotalPackages  int32  `protobuf:"varint,10,opt,name=total_packages,json=totalPackages,proto3" json:"total_packages,omitempty"`    // Total number of packages
	CurrentPackage int32  `protobuf:"varint,11,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	RuleType       int32  `protobuf:"varint,12,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigFetchReqDTO) Reset() {
	*x = DevConfigFetchReqDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigFetchReqDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigFetchReqDTO) ProtoMessage() {}

func (x *DevConfigFetchReqDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigFetchReqDTO.ProtoReflect.Descriptor instead.
func (*DevConfigFetchReqDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{1}
}

func (x *DevConfigFetchReqDTO) GetRequestTime() int32 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DevConfigFetchReqDTO) GetCrc() int32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigFetchReqDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigFetchReqDTO) GetCfgData() string {
	if x != nil {
		return x.CfgData
	}
	return ""
}

func (x *DevConfigFetchReqDTO) GetCfgCrc() int32 {
	if x != nil {
		return x.CfgCrc
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetTotalPackages() int32 {
	if x != nil {
		return x.TotalPackages
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigFetchReqDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type DevConfigPutResDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime   int32   `protobuf:"varint,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`        // Timestamp of the response
	TransactionId  int64   `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`     // Transaction ID
	RuleId         int32   `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`                          // Rule ID
	Data           string  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                             // Data
	Crc            int32   `protobuf:"varint,5,opt,name=crc,proto3" json:"crc,omitempty"`                                              // CRC value
	DtuSn          string  `protobuf:"bytes,6,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                              // DTU serial number
	DevSn          string  `protobuf:"bytes,7,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                              // Device serial number
	CfgData        string  `protobuf:"bytes,8,opt,name=cfg_data,json=cfgData,proto3" json:"cfg_data,omitempty"`                        // Configuration data
	CfgCrc         int32   `protobuf:"varint,9,opt,name=cfg_crc,json=cfgCrc,proto3" json:"cfg_crc,omitempty"`                          // Configuration CRC value
	TotalPackages  int32   `protobuf:"varint,10,opt,name=total_packages,json=totalPackages,proto3" json:"total_packages,omitempty"`    // Total number of packages
	CurrentPackage int32   `protobuf:"varint,11,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	MiToSn         []int64 `protobuf:"varint,12,rep,packed,name=mi_to_sn,json=miToSn,proto3" json:"mi_to_sn,omitempty"`                // List of MI (Meter Interface) serial numbers
	RuleType       int32   `protobuf:"varint,13,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigPutResDTO) Reset() {
	*x = DevConfigPutResDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigPutResDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigPutResDTO) ProtoMessage() {}

func (x *DevConfigPutResDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigPutResDTO.ProtoReflect.Descriptor instead.
func (*DevConfigPutResDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{2}
}

func (x *DevConfigPutResDTO) GetResponseTime() int32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *DevConfigPutResDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigPutResDTO) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *DevConfigPutResDTO) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DevConfigPutResDTO) GetCrc() int32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *DevConfigPutResDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigPutResDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigPutResDTO) GetCfgData() string {
	if x != nil {
		return x.CfgData
	}
	return ""
}

func (x *DevConfigPutResDTO) GetCfgCrc() int32 {
	if x != nil {
		return x.CfgCrc
	}
	return 0
}

func (x *DevConfigPutResDTO) GetTotalPackages() int32 {
	if x != nil {
		return x.TotalPackages
	}
	return 0
}

func (x *DevConfigPutResDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigPutResDTO) GetMiToSn() []int64 {
	if x != nil {
		return x.MiToSn
	}
	return nil
}

func (x *DevConfigPutResDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type DevConfigPutReqDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestTime    int32   `protobuf:"varint,1,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`          // Timestamp of the request
	TransactionId  int64   `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`    // Transaction ID
	DtuSn          string  `protobuf:"bytes,3,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                             // DTU serial number
	DevSn          string  `protobuf:"bytes,4,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                             // Device serial number
	Status         int32   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                                       // Status indicator
	CurrentPackage int32   `protobuf:"varint,6,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	MiToSn         []int64 `protobuf:"varint,7,rep,packed,name=mi_to_sn,json=miToSn,proto3" json:"mi_to_sn,omitempty"`                // List of MI (Meter Interface) serial numbers
	RuleType       int32   `protobuf:"varint,8,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigPutReqDTO) Reset() {
	*x = DevConfigPutReqDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigPutReqDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigPutReqDTO) ProtoMessage() {}

func (x *DevConfigPutReqDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigPutReqDTO.ProtoReflect.Descriptor instead.
func (*DevConfigPutReqDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{3}
}

func (x *DevConfigPutReqDTO) GetRequestTime() int32 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *DevConfigPutReqDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigPutReqDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigPutReqDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigPutReqDTO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DevConfigPutReqDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigPutReqDTO) GetMiToSn() []int64 {
	if x != nil {
		return x.MiToSn
	}
	return nil
}

func (x *DevConfigPutReqDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type DevConfigReportReqDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestTime    int32  `protobuf:"varint,1,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`           // Timestamp of the request
	TransactionId  int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`     // Transaction ID
	RuleId         int32  `protobuf:"varint,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`                          // Rule ID
	Data           string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                             // Data
	Crc            int32  `protobuf:"varint,5,opt,name=crc,proto3" json:"crc,omitempty"`                                              // CRC value
	DtuSn          string `protobuf:"bytes,6,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                              // DTU serial number
	DevSn          string `protobuf:"bytes,7,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                              // Device serial number
	CfgData        string `protobuf:"bytes,8,opt,name=cfg_data,json=cfgData,proto3" json:"cfg_data,omitempty"`                        // Configuration data
	CfgCrc         int32  `protobuf:"varint,9,opt,name=cfg_crc,json=cfgCrc,proto3" json:"cfg_crc,omitempty"`                          // Configuration CRC value
	TotalPackages  int32  `protobuf:"varint,10,opt,name=total_packages,json=totalPackages,proto3" json:"total_packages,omitempty"`    // Total number of packages
	CurrentPackage int32  `protobuf:"varint,11,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	RuleType       int32  `protobuf:"varint,12,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigReportReqDTO) Reset() {
	*x = DevConfigReportReqDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigReportReqDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigReportReqDTO) ProtoMessage() {}

func (x *DevConfigReportReqDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigReportReqDTO.ProtoReflect.Descriptor instead.
func (*DevConfigReportReqDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{4}
}

func (x *DevConfigReportReqDTO) GetRequestTime() int32 {
	if x != nil {
		return x.RequestTime
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetRuleId() int32 {
	if x != nil {
		return x.RuleId
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *DevConfigReportReqDTO) GetCrc() int32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigReportReqDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigReportReqDTO) GetCfgData() string {
	if x != nil {
		return x.CfgData
	}
	return ""
}

func (x *DevConfigReportReqDTO) GetCfgCrc() int32 {
	if x != nil {
		return x.CfgCrc
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetTotalPackages() int32 {
	if x != nil {
		return x.TotalPackages
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigReportReqDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

type DevConfigReportResDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseTime   int32  `protobuf:"varint,1,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"`       // Timestamp of the response
	TransactionId  int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`    // Transaction ID
	DtuSn          string `protobuf:"bytes,3,opt,name=dtu_sn,json=dtuSn,proto3" json:"dtu_sn,omitempty"`                             // DTU serial number
	DevSn          string `protobuf:"bytes,4,opt,name=dev_sn,json=devSn,proto3" json:"dev_sn,omitempty"`                             // Device serial number
	CurrentPackage int32  `protobuf:"varint,5,opt,name=current_package,json=currentPackage,proto3" json:"current_package,omitempty"` // Current package number
	RuleType       int32  `protobuf:"varint,6,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`                   // Rule type
}

func (x *DevConfigReportResDTO) Reset() {
	*x = DevConfigReportResDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_DevConfig_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevConfigReportResDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevConfigReportResDTO) ProtoMessage() {}

func (x *DevConfigReportResDTO) ProtoReflect() protoreflect.Message {
	mi := &file_protos_DevConfig_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevConfigReportResDTO.ProtoReflect.Descriptor instead.
func (*DevConfigReportResDTO) Descriptor() ([]byte, []int) {
	return file_protos_DevConfig_proto_rawDescGZIP(), []int{5}
}

func (x *DevConfigReportResDTO) GetResponseTime() int32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *DevConfigReportResDTO) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DevConfigReportResDTO) GetDtuSn() string {
	if x != nil {
		return x.DtuSn
	}
	return ""
}

func (x *DevConfigReportResDTO) GetDevSn() string {
	if x != nil {
		return x.DevSn
	}
	return ""
}

func (x *DevConfigReportResDTO) GetCurrentPackage() int32 {
	if x != nil {
		return x.CurrentPackage
	}
	return 0
}

func (x *DevConfigReportResDTO) GetRuleType() int32 {
	if x != nil {
		return x.RuleType
	}
	return 0
}

var File_protos_DevConfig_proto protoreflect.FileDescriptor

var file_protos_DevConfig_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x76,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x44, 0x54,
	0x4f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x74, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x53, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xee, 0x02, 0x0a, 0x14, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x44, 0x54, 0x4f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x63, 0x72, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x65,
	0x76, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x53,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x66, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x66, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x66, 0x67, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x66, 0x67, 0x43, 0x72, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x88, 0x03, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x44, 0x54, 0x4f, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x63, 0x72, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76,
	0x53, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x66, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x66, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x66, 0x67, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x66, 0x67, 0x43, 0x72, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x08, 0x6d, 0x69, 0x5f, 0x74, 0x6f, 0x5f,
	0x73, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x54, 0x6f, 0x53, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x84, 0x02,
	0x0a, 0x12, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x44, 0x54, 0x4f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x74, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x74, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x08, 0x6d, 0x69, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x69, 0x54, 0x6f, 0x53, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x44, 0x54, 0x4f, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x63, 0x72, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x74, 0x75, 0x5f, 0x73,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74, 0x75, 0x53, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x64, 0x65, 0x76, 0x53, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x66, 0x67, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x66, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x66, 0x67, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x66, 0x67, 0x43, 0x72, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x76, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x44, 0x54, 0x4f,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x64, 0x74, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x74,
	0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x53, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x23, 0x5a, 0x0f, 0x68, 0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0xaa, 0x02, 0x0f, 0x48, 0x6f, 0x79, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_DevConfig_proto_rawDescOnce sync.Once
	file_protos_DevConfig_proto_rawDescData = file_protos_DevConfig_proto_rawDesc
)

func file_protos_DevConfig_proto_rawDescGZIP() []byte {
	file_protos_DevConfig_proto_rawDescOnce.Do(func() {
		file_protos_DevConfig_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_DevConfig_proto_rawDescData)
	})
	return file_protos_DevConfig_proto_rawDescData
}

var file_protos_DevConfig_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_DevConfig_proto_goTypes = []any{
	(*DevConfigFetchResDTO)(nil),  // 0: DevConfigFetchResDTO
	(*DevConfigFetchReqDTO)(nil),  // 1: DevConfigFetchReqDTO
	(*DevConfigPutResDTO)(nil),    // 2: DevConfigPutResDTO
	(*DevConfigPutReqDTO)(nil),    // 3: DevConfigPutReqDTO
	(*DevConfigReportReqDTO)(nil), // 4: DevConfigReportReqDTO
	(*DevConfigReportResDTO)(nil), // 5: DevConfigReportResDTO
}
var file_protos_DevConfig_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_DevConfig_proto_init() }
func file_protos_DevConfig_proto_init() {
	if File_protos_DevConfig_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_DevConfig_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigFetchResDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_DevConfig_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigFetchReqDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_DevConfig_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigPutResDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_DevConfig_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigPutReqDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_DevConfig_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigReportReqDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_DevConfig_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DevConfigReportResDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_DevConfig_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_DevConfig_proto_goTypes,
		DependencyIndexes: file_protos_DevConfig_proto_depIdxs,
		MessageInfos:      file_protos_DevConfig_proto_msgTypes,
	}.Build()
	File_protos_DevConfig_proto = out.File
	file_protos_DevConfig_proto_rawDesc = nil
	file_protos_DevConfig_proto_goTypes = nil
	file_protos_DevConfig_proto_depIdxs = nil
}
